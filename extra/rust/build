#!/bin/sh -e

# This package mimics the download process of rust's 'x.py'
# bootstrap library to allow for the removal of the internet
# connection requirement per build.
{
    cache_dir=build/cache/2021-06--17
    mkdir -p "$cache_dir"

    for tarball in *.tar.xz\?no-extract; do
        mv -f "$tarball" "$cache_dir/${tarball%%\?no-extract}"
    done
}

patch -p1 < llvm-clang.patch
patch -p1 < cargo-miri.patch
patch -p1 < libressl.patch

# Disable static by default.
sed -i 's/\(base.crt_static_default =\) true/\1 false/' \
    compiler/rustc_target/src/spec/linux_musl_base.rs \
    vendor/rustc-ap-rustc_target/src/spec/linux_musl_base.rs

# We modified vendored files here.
sed -i 's/\("files":{\)[^}]*/\1/' \
    vendor/openssl-sys/.cargo-checksum.json \
    vendor/rustc-ap-rustc_target/.cargo-checksum.json

# Move credential helpers to /usr/lib.
sed -i 's/libexec/lib/g' \
    src/bootstrap/dist.rs \
    src/tools/cargo/src/cargo/ops/registry/auth.rs

cat > config.toml <<EOF
[llvm]
link-shared = true

[build]
build           = "x86_64-unknown-linux-musl"
host            = [ "x86_64-unknown-linux-musl" ]
target          = [ "x86_64-unknown-linux-musl" ]
docs            = false
compiler-docs   = false
extended        = true
submodules      = false
python          = "python3"
locked-deps     = true
vendor          = true
sanitizers      = false
profiler        = false
full-bootstrap  = false

[install]
prefix = "/usr"

[rust]
channel             = "stable"
rpath               = false
debuginfo-level     = 0
debug               = false
backtrace           = false
jemalloc            = false
debug-assertions    = false
codegen-tests       = false
codegen-units-std   = 1
llvm-libunwind      = "system"

[target.x86_64-unknown-linux-musl]
llvm-config = "/usr/bin/llvm-config"
crt-static  = false
EOF

# Apparently. It's possible now. However I *won't* recommend this as the
# behavior can change anytime soon. Also it's a dirty hack. We can only
# hope libunwind and libgcc's unwinding part stays compatible.
mkdir -p libgcc
ln -s /usr/lib/libunwind.so.1 libgcc/libgcc_s.so.1
cat > libgcc/libgcc_s.so <<EOF
INPUT(-lunwind)
EOF
export LD_LIBRARY_PATH="$PWD/libgcc:$LD_LIBRARY_PATH"
export LIBRARY_PATH="$PWD/libgcc:$LIBRARY_PATH"

python3 ./x.py build -j "$(nproc)"
DESTDIR="$1" python3 ./x.py install

rm -rf "$1/usr/lib/rustlib/src/"
rm -f  "$1/usr/lib/rustlib/uninstall.sh"
