From 68c27553b63968617c3dd6a7b44545e44847261a Mon Sep 17 00:00:00 2001
From: hovercats <hovercatswithlasereyes@protonmail.com>
Date: Mon, 7 Feb 2022 15:05:47 +0100
Subject: [PATCH] apply externalpipe patch.

also added 2 shellscripts for copying urls, and following urls

added keybindings to manpage aswell.

removed unused regex line in followurl and copyurl
---
 Makefile     |  6 ++++++
 config.def.h |  5 +++++
 copyurl      |  7 ++++++
 followurl    |  9 ++++++++
 st.1         |  6 ++++++
 st.c         | 61 +++++++++++++++++++++++++++++++++++++++++++++++++++-
 st.h         |  1 +
 7 files changed, 94 insertions(+), 1 deletion(-)
 create mode 100755 copyurl
 create mode 100755 followurl

diff --git a/Makefile b/Makefile
index 470ac86..7a85b2f 100644
--- a/Makefile
+++ b/Makefile
@@ -43,7 +43,11 @@ dist: clean
 install: st
 	mkdir -p $(DESTDIR)$(PREFIX)/bin
 	cp -f st $(DESTDIR)$(PREFIX)/bin
+	cp -f copyurl $(DESTDIR)$(PREFIX)/bin
+	cp -f followurl $(DESTDIR)$(PREFIX)/bin
 	chmod 755 $(DESTDIR)$(PREFIX)/bin/st
+	chmod 755 $(DESTDIR)$(PREFIX)/bin/copyurl
+	chmod 755 $(DESTDIR)$(PREFIX)/bin/followurl
 	mkdir -p $(DESTDIR)$(MANPREFIX)/man1
 	sed "s/VERSION/$(VERSION)/g" < st.1 > $(DESTDIR)$(MANPREFIX)/man1/st.1
 	chmod 644 $(DESTDIR)$(MANPREFIX)/man1/st.1
@@ -52,6 +56,8 @@ install: st
 
 uninstall:
 	rm -f $(DESTDIR)$(PREFIX)/bin/st
+	rm -f $(DESTDIR)$(PREFIX)/bin/copyurl
+	rm -f $(DESTDIR)$(PREFIX)/bin/followurl
 	rm -f $(DESTDIR)$(MANPREFIX)/man1/st.1
 
 .PHONY: all options clean dist install uninstall
diff --git a/config.def.h b/config.def.h
index 42c3178..0a53914 100644
--- a/config.def.h
+++ b/config.def.h
@@ -189,6 +189,9 @@ static MouseShortcut mshortcuts[] = {
 #define MODKEY Mod1Mask
 #define TERMMOD (ControlMask|ShiftMask)
 
+static char *copyurl[] = { "/bin/sh", "-c", "copyurl", "externalpipe", NULL  };
+static char *followurl[] = { "/bin/sh", "-c", "followurl", "externalpipe", NULL  };
+
 static Shortcut shortcuts[] = {
 	/* mask                 keysym          function        argument */
 	{ XK_ANY_MOD,           XK_Break,       sendbreak,      {.i =  0} },
@@ -201,6 +204,8 @@ static Shortcut shortcuts[] = {
 	{ TERMMOD,              XK_Num_Lock,    numlock,        {.i =  0} },
   { XK_NO_MOD,            XK_Page_Up,     kscrollup,      {.i = 10} },
   { XK_NO_MOD,            XK_Page_Down,   kscrolldown,    {.i = 10} },
+  { Mod1Mask,             XK_y,           externalpipe,   {.v = copyurl } },
+  { Mod1Mask,             XK_o,           externalpipe,   {.v = followurl } },
 };
 
 /*
diff --git a/copyurl b/copyurl
new file mode 100755
index 0000000..04ceeba
--- /dev/null
+++ b/copyurl
@@ -0,0 +1,7 @@
+#!/bin/sh
+
+regex="(((http|https|gopher|gemini|ftp|ftps|git)://|www\\.)[a-zA-Z0-9.]*[:]?[a-zA-Z0-9./@$&%?$\#=_~-]*)|((magnet:\\?xt=urn:btih:)[a-zA-Z0-9]*)"
+
+url=$(grep -Ei "$regex" | uniq | dmenu -l 10 -p "Copy:" -w "$WINDOWID")
+
+echo "$url" | tr -d '\n' | xsel -i -b 
diff --git a/followurl b/followurl
new file mode 100755
index 0000000..12b00f1
--- /dev/null
+++ b/followurl
@@ -0,0 +1,9 @@
+#!/bin/sh
+
+BROWSER=surf
+
+regex="(((http|https|gopher|gemini|ftp|ftps|git)://|www\\.)[a-zA-Z0-9.]*[:]?[a-zA-Z0-9./@$&%?$\#=_~-]*)|((magnet:\\?xt=urn:btih:)[a-zA-Z0-9]*)"
+
+url=$(grep -Ei "$regex" | uniq | dmenu -l 10 -p "Go:" -w "$WINDOWID") || exit
+
+$BROWSER "$url"
diff --git a/st.1 b/st.1
index 1fd75e6..3b26b97 100644
--- a/st.1
+++ b/st.1
@@ -150,6 +150,12 @@ Scroll up
 .TP
 .B Page Down / Mousewheel Down
 Scroll down
+.TP
+.B alt-o
+Select and open urls in browser using dmenu
+.TP
+.B alt-y
+Select and copy urls on screen using dmenu
 .SH CUSTOMIZATION
 .B st
 can be customized by creating a custom config.h and (re)compiling the source
diff --git a/st.c b/st.c
index 8e0e73f..0df95fb 100644
--- a/st.c
+++ b/st.c
@@ -732,8 +732,14 @@ sigchld(int a)
 	if ((p = waitpid(pid, &stat, WNOHANG)) < 0)
 		die("waiting for pid %hd failed: %s\n", pid, strerror(errno));
 
-	if (pid != p)
+	if (pid != p) {
+		if (p == 0 && wait(&stat) < 0)
+			die("wait: %s\n", strerror(errno));
+
+		/* reinstall sigchld handler */
+		signal(SIGCHLD, sigchld);
 		return;
+  }
 
 	if (WIFEXITED(stat) && WEXITSTATUS(stat))
 		die("child exited with status %d\n", WEXITSTATUS(stat));
@@ -2054,6 +2060,59 @@ strhandle(void)
 	strdump();
 }
 
+void
+externalpipe(const Arg *arg)
+{
+	int to[2];
+	char buf[UTF_SIZ];
+	void (*oldsigpipe)(int);
+	Glyph *bp, *end;
+	int lastpos, n, newline;
+
+	if (pipe(to) == -1)
+		return;
+
+	switch (fork()) {
+	case -1:
+		close(to[0]);
+		close(to[1]);
+		return;
+	case 0:
+		dup2(to[0], STDIN_FILENO);
+		close(to[0]);
+		close(to[1]);
+		execvp(((char **)arg->v)[0], (char **)arg->v);
+		fprintf(stderr, "st: execvp %s\n", ((char **)arg->v)[0]);
+		perror("failed");
+		exit(0);
+	}
+
+	close(to[0]);
+	/* ignore sigpipe for now, in case child exists early */
+	oldsigpipe = signal(SIGPIPE, SIG_IGN);
+	newline = 0;
+	for (n = 0; n < term.row; n++) {
+		bp = term.line[n];
+		lastpos = MIN(tlinelen(n) + 1, term.col) - 1;
+		if (lastpos < 0)
+			break;
+		end = &bp[lastpos + 1];
+		for (; bp < end; ++bp)
+			if (xwrite(to[1], buf, utf8encode(bp->u, buf)) < 0)
+				break;
+		if ((newline = term.line[n][lastpos].mode & ATTR_WRAP))
+			continue;
+		if (xwrite(to[1], "\n", 1) < 0)
+			break;
+		newline = 0;
+	}
+	if (newline)
+		(void)xwrite(to[1], "\n", 1);
+	close(to[1]);
+	/* restore */
+	signal(SIGPIPE, oldsigpipe);
+}
+
 void
 strparse(void)
 {
diff --git a/st.h b/st.h
index da36b34..975e66f 100644
--- a/st.h
+++ b/st.h
@@ -81,6 +81,7 @@ void die(const char *, ...);
 void redraw(void);
 void draw(void);
 
+void externalpipe(const Arg *);
 void kscrolldown(const Arg *);
 void kscrollup(const Arg *);
 void printscreen(const Arg *);
-- 
2.35.1

